<!DOCTYPE html>
<html lang="en-US">
<head>
  <title>Manuals</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>

  <meta charset="UTF-8">
  <title>Pen - What You See Is What You Get (WYSIWYG)</title>

</head>
<body>

<div id="toolbar">
  <span id="mode" class="icon-mode"></span>
  <span id="hinted" class="icon-pre disabled" title="Toggle Markdown Hints"></span>
  <span id="tomd" title="to markdown">MD</span>
</div>

<!-- <div id="custom-toolbar" class="pen-menu pen-menu" style="display: block; top: 20px; left: 10px;">
  <i class="pen-icon icon-insertimage" data-action="insertimage"></i>
  <i class="pen-icon icon-blockquote" data-action="blockquote"></i>
  <i class="pen-icon icon-h2" data-action="h2"></i>
  <i class="pen-icon icon-h3" data-action="h3"></i>
  <i class="pen-icon icon-p active" data-action="p"></i>
  <i class="pen-icon icon-code" data-action="code"></i>
  <i class="pen-icon icon-insertorderedlist" data-action="insertorderedlist"></i>
  <i class="pen-icon icon-insertunorderedlist" data-action="insertunorderedlist"></i>
  <i class="pen-icon icon-inserthorizontalrule" data-action="inserthorizontalrule"></i>
  <i class="pen-icon icon-indent" data-action="indent"></i>
  <i class="pen-icon icon-outdent" data-action="outdent"></i>
  <i class="pen-icon icon-bold" data-action="bold"></i>
  <i class="pen-icon icon-italic" data-action="italic"></i>
  <i class="pen-icon icon-underline" data-action="underline"></i>
  <i class="pen-icon icon-createlink" data-action="createlink"></i>
</div> -->

<div data-toggle="pen" data-placeholder="im a placeholder">
  <%=yield%>
</div>

<script type="text/javascript">

// config
var options = {
  // toolbar: document.getElementById('custom-toolbar'),
  editor: document.querySelector('[data-toggle="pen"]'),
  debug: true,
  list: [
    'insertimage', 'blockquote', 'h2', 'h3', 'p', 'code', 'insertorderedlist', 'insertunorderedlist', 'inserthorizontalrule',
    'indent', 'outdent', 'bold', 'italic', 'underline', 'createlink'
  ]
};

// create editor
var pen = window.pen = new Pen(options);

pen.focus();

// toggle editor mode
document.querySelector('#mode').addEventListener('click', function() {
  var text = this.textContent;

  if(this.classList.contains('disabled')) {
    this.classList.remove('disabled');
    pen.rebuild();
  } else {
    this.classList.add('disabled');
    pen.destroy();
  }
});

// export content as markdown
document.querySelector('#tomd').addEventListener('click', function() {
  var text = pen.toMd();
  document.body.innerHTML = '<a href="javascript:location.reload()">&larr;back to editor</a><br><br><pre>' + text + '</pre>';
});

// toggle editor mode
document.querySelector('#hinted').addEventListener('click', function() {
  var pen = document.querySelector('.pen')

  if(pen.classList.contains('hinted')) {
    pen.classList.remove('hinted');
    this.classList.add('disabled');
  } else {
    pen.classList.add('hinted');
    this.classList.remove('disabled');
  }
});
</script>
</body>
</html>
